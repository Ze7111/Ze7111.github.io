---
import { Picture } from "astro:assets";
import BadgeLink from "./BadgeLink.astro";
import Badge from "./Badge.astro";
import Button from "./Button.astro";
import IconType from "./Button.astro";

const t = (str) => str;

let { description, title, img, site, tech_stack, badge_props, source = "" } = Astro.props;
---

<div class="grid blur-bg p-5 lg:p-10 rounded-xl">
	<div class="grid lg:grid-cols-2">
		<div class="grid self-start">
			<Picture
				class="object-cover object-center min-h-full rounded-2xl"
				src={img}
				width="500"
				height="350"
				alt={title}
				formats={["avif", "webp"]}
			/>
		</div>
		<div class="lg:ml-10">
			<h3
				class="font-black bg-clip-text text-transparent bg-gradient-to-r from-primary-0 to-accent-0 text-3xl lg:text-4xl mb-5 mt-3 lg:mt-0"
			>
				{title}
			</h3>
			<p class="inline-flex text-xl font-light">
				{description}
			</p>
			<div class="py-5">
				<h4 class="text-base mb-5 font-thin">Tech Stack</h4>
				<ul class="flex flex-wrap space-x-2 space-y-2 xs:space-y-0">
					{
						Array.isArray(tech_stack) ? (
							tech_stack.map((badgeLink, index) => (
								<BadgeLink key={index} {...badgeLink} />
							))
						) : (
							<BadgeLink {...tech_stack} />
						)
					}

					{
						Array.isArray(badge_props) ? (
							badge_props.map((badge, index) => <Badge key={index} {...badge} />)
						) : (
							<Badge {...badge_props} />
						)
					}
				</ul>
			</div>
			
			<span class="mt-5">
				<Button text="View Site" link={site} />
			</span>
			<!-- if the source link is provided only then show the button other wise show closed source with a disabled -->
			{
				source ? (
					<span class="mt-5 pl-4">
						<Button text="View Source" link={source} iconType="git" />
					</span>
				) : (
					<span class="mt-5 pl-4">
						<Button text="View Source" link={source} disabled reason="closed source" iconType="git" />
					</span>
				)
			}
		</div>
	</div>
</div>
